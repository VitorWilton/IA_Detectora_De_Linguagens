{"text": "public class MyMath { public int add(int a, int b) { return a + b; } }"}
{"text": "private String formatName(String firstName, String lastName) { return firstName.toUpperCase() + \" \" + lastName.toUpperCase(); }"}
{"text": "public static void main(String[] args) { for (int i = 0; i < 5; i++) { System.out.println(i); } }"}
{"text": "import java.util.List; import java.util.ArrayList; public class ListExample { public void printList(List<String> list) { for (String s : list) { System.out.println(s); } } }"}
{"text": "public void processInput(Scanner scanner) { while (scanner.hasNext()) { String line = scanner.nextLine(); System.out.println(line); } }"}
{"text": "public int calculateFactorial(int n) { if (n == 0) { return 1; } else { return n * calculateFactorial(n - 1); } }"}
{"text": "private static final int MAX_SIZE = 100;"}
{"text": "public void run() { new Thread(() -> System.out.println(\"Running in a new thread\")).start(); }"}
{"text": "public class Singleton { private static Singleton instance; private Singleton() {} public static Singleton getInstance() { if (instance == null) { instance = new Singleton(); } return instance; } }"}
{"text": "public class Account { private double balance; public Account(double initialBalance) { this.balance = initialBalance; } }"}
{"text": "public interface Drawable { void draw(); }"}
{"text": "public void sortArray(int[] arr) { Arrays.sort(arr); }"}
{"text": "public void readFile(String filePath) throws IOException { try (BufferedReader br = new BufferedReader(new FileReader(filePath))) { String line; while ((line = br.readLine()) != null) { System.out.println(line); } } }"}
{"text": "public boolean isEven(int number) { return number % 2 == 0; }"}
{"text": "public void connectToDatabase() { try (Connection conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/db\")) { // ... } }"}